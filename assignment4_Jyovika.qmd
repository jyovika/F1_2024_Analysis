---
title: "Pit Stop Power Play: Do Lightning-Fast Tire Swaps Actually Improve Your Race Results?"
subtitle: "Assignment 4 ETC5512"
author: Jyovika Aswale
format: html
editor: visual
---

:::::: panel-tabset
<!-- Task 1 Tab: Data and Documenting -->

## Data and Documenting


#### 1.1 Main Question

Do faster pitstops actually lead to better race results, or is it basically a non-factor?

#### 1.2 Sub-Questions

1.  **How do we even define “faster”?**

    -   What’s the cutoff for a “quick” pitstop (e.g., top 10% of pit times)?

2.  **What’s the relationship between pitstop speed and final finish position??**

    -   Is there a clear pattern where drivers with lightning-fast stops consistently finish higher?

3.  **Is this “pit-speed → race outcome” thing consistent across seasons?**

    -   Did pit-crew wizardry matter more back in, say, 2010 than it does in 2024?

    -   Are teams converging on similar pit times now, making the gap less impactful?

#### 1.3 Why I chose this question

1.  **Data-Driven Rigor** As a lifelong Formula 1 enthusiast, I’ve always been fascinated by the precision and strategy behind every race—and I finally have the tools to test my assumptions. Pit-stop durations and finishing positions are publicly available in CSVs and APIs, so rather than relying on anecdote or speculation, I can analyze hard numbers to determine whether quick pit stops truly influence race outcomes.

2.  **Illuminating an Underappreciated Factor** Everyone focuses on qualifying laps and engine performance, but pit-crew efficiency often feels like F1’s “secret sauce.” I’ve repeatedly wondered if those sub-23-second tire changes really move the needle on track position. By investigating this question, I hope to shed light on whether the hype around pit-crew speed is justified or if it’s overemphasized relative to other strategic elements.

3. **Future-Oriented Perspective** Formula 1 evolves rapidly: regulations change, technology advances, and strategies shift from one season to the next. I’ve long been curious about whether a fast pit stop was just a 2010-era advantage or if its impact has remained significant through 2024. By examining this question across multiple seasons, I aim to determine whether pit-lane efficiency remains a decisive factor or if its margin of influence has diminished over time.

#### 2.1 What data will you be using to answer that question?

I am using the Ergast database [Ergast database](http://ergast.com/mrd/db/) because it provides comprehensive, well-structured CSV datasets containing all necessary variables—such as pit-stop durations (milliseconds), driver IDs, race IDs, finishing positions, and race metadata. The data covers every Formula 1 race from 1950 onward, and I focus on the modern era (20011–2024) where pit-stop timing is reliably recorded. This makes it suitable for analyzing the relationship between pit-stop speed and race results.

**Licence:**
The Ergast database permits free use of its data and API strictly for personal, educational, and research purposes. It explicitly forbids charging any fees for applications or services that use the data. This non-commercial usage policy aligns perfectly with the requirements of this academic project. [Terms and Conditions](http://ergast.com/mrd/terms/)

#### 2.2 Explain why this data is suitable for the task.

1. **Pit Stops** (`pit_stops.csv`)

- Why it’s suitable:

  a. My core question hinges on “how fast was each pit stop?”—and the milliseconds column is the ground truth for that.

  b. Because Ergast covers every Grand Prix from 2009 onward, this table gives consistent, machine-readable pit times for thousands of stops.

2. **Race Results** (`results.csv`)

- Why it’s suitable:

  a. To answer “do faster pit stops correlate with better finishes”, I need each driver’s eventual race result— `positionOrder` gives a clean, numeric rank (1, 2, 3 …)

  b. Joining on `raceId`, `driverId` allows us to link each driver’s best pit‐stop duration (from `pit_stops.csv`) with exactly where they finished.

  d. The`grid` lets me control for starting position if needed (e.g. “did a fast pit stop help someone gain more places than they started?”).

  e.  statusId distinguishes DNFs (where a quick stop might not translate into a good finish) from drivers who actually crossed the line.

3. **Races** (`races.csv`)

- Why it’s suitable:

  a. By joining on raceId, we can replace numeric IDs in pit_stops.csv and results.csv with the name (e.g. “Australian Grand Prix 2024”), making tables and plots instantly comprehensible.
    
  b. The`year` field lets us filter or group races by season (e.g. isolate 2011 vs. 2015 vs. 2019 vs. 2024).
    
4. **Drivers** (`drivers.csv`)

- Why it’s suitable:

  a. I can join on driverId to replace that numeric ID with a more readable label. For instance, create a driver_full field by concatenating forename + " " + surname (e.g. "Lewis Hamilton").
    
5. **Constructors** (`constructors.csv`)

- Why it’s suitable:

  a. By joining on constructorId, I can label each pit‐stop or result row with the team name (rather than a numeric code). For example, "Red Bull Racing" vs. "McLaren".

6. **Status** (`status.csv`)

    a. In `results.csv`, each driver’s race outcome is labeled by `statusId`. Without context, statusId = 1 vs. statusId = 3 vs. statusId = 14 doesn’t tell you anything. By joining to status.csv, I can replace those numeric codes with human-readable labels.


### 3.1 Data Limitations, Privacy and Ethics

The Ergast dataset is **observational data**, comprising recorded measurements of Formula 1 race events and pit-stop durations. No experimental manipulation or intervention was performed; the data reflects real-world race conditions as they happened. While the dataset is comprehensive for official Formula 1 races during the 2009–2024 period, it is still considered a sample of the wider world of motor racing.

- **Data Limitations:**

  1. The  pit stop dataset only contains detailed pit stop timing data from around the 2010–2011 season onward. As a result, no pit stop information is available for races prior to this period. This limitation means that any analysis involving pit stop durations must exclude seasons before 2011, potentially reducing the historical range of the study.

  2. Some anomalies exist, such as rare outliers in pit-stop duration likely due to timing errors or race incidents, which require filtering during analysis.

  3. The dataset does not capture every contextual factor influencing race outcomes (e.g., weather, team strategy, mechanical failures) that might affect the interpretation of pit-stop impact.

- **Data Privacy and Ethics:**

  1. The data is fully public and sourced from official timing and results published by the FIA and race organizers.

  2. No personal or sensitive information about drivers or teams is included beyond publicly known facts (names, nationalities, race results).

  3. Usage strictly adheres to the data provider’s terms of use, which permit free non-commercial use for research and education.

### 4.1 Data Download and Processing Steps

1. **Data Download -**

  -  I visited the Ergast database website at http://ergast.com/mrd/db/.

  - On the page, I navigated to the Database Images section and scrolled down to find the CSV Database Tables download.

  - I downloaded the ZIP folder containing multiple CSV files, including circuits, constructor results, constructor standings, constructors, driver standings, lap times, pit stops, qualifying, races, results, sprint results, and status—each in .csv format.

I extracted the ZIP file and organized the relevant CSV files into a data/ directory for easy access.

  - For this project, I selected the following relevant CSV files:

    - `pit_stops.csv`

    - `results.csv`

    - `races.csv`

    - `drivers.csv`

    - `status.csv`

2. **Load in Data**

```{r, message=FALSE}
library(tidyverse)
pitstops_df <- read.csv(here::here("data/pit_stops.csv"))

results_df <- read.csv(here::here("data/results.csv"))

race_df <- read.csv(here::here("data/races.csv"))

driver_df <- read.csv(here::here("data/drivers.csv"))

constructor_df <- read.csv(here::here("data/constructors.csv"))

status_df <- read.csv(here::here("data/status.csv"))
```

3. **Data Processing**

**Step 1:** Create Driver, Races and Constructors Lookup Table:

- To make the data more readable and easier to work with, I created lookup tables for drivers, races, and constructors by replacing their numeric IDs with human-friendly names.

    - For drivers, I combined their first and last names.

    - For races, I combined the race name with the year to uniquely identify each event.

    - For constructors, I selected their names corresponding to their IDs.
```{r}
drivers_lookup <- driver_df %>%
  mutate(driver_full = paste(forename, surname)) %>%
  select(driverId, driver_full)

races_lookup <- race_df %>%
  mutate(race_full = paste(name, year)) %>%
  select(raceId, race_full, year)

constructors_lookup <- constructor_df %>%
  select(constructorId, constructor_name = name)
```

**Step 2:** Combine Data into One Table:

I merged the pit stop data with all lookup tables and selected relevant columns from race results and status tables. This creates one comprehensive dataset including driver names, race info, constructor names, pit stop details, race finishing positions, grid positions, and race outcomes.

```{r}
combined_df <- pitstops_df %>%
  left_join(drivers_lookup, by = "driverId") %>%
  left_join(races_lookup, by = "raceId") %>%
  left_join(
    results_df %>%
      select(raceId, driverId, constructorId, positionOrder, positionText, grid, statusId),
    by = c("raceId", "driverId")
  ) %>%
  left_join(constructors_lookup, by = "constructorId") %>%
  left_join(status_df, by = "statusId") %>%
  filter(year %in% c(2011, 2015, 2019, 2024)) %>%
  select(
    driver = driver_full,
    race = race_full,
    year,
    constructor = constructor_name,
    stop,
    lap,
    duration,
    milliseconds,
    positionOrder,
    grid,
    status
  )
```

**Step 3:** Filter Data by Year and Pit Stop Duration:

To focus the analysis on realistic pit stop times, I filtered out stops longer than 50 seconds and created separate datasets for each target year (2011, 2015, 2019, 2024).

```{r}
combined_2011 <- combined_df %>%
  filter(year == 2011, milliseconds <= 50000)

combined_2015 <- combined_df %>%
  filter(year == 2015, milliseconds <= 50000)

combined_2019 <- combined_df %>%
  filter(year == 2019, milliseconds <= 50000)

combined_2024 <- combined_df %>%
  filter(year == 2024, milliseconds <= 50000)

```

4. **Assumptions and Observations**

    a. **Long Pit Stops as Outliers:** Upon inspecting the data, I noticed unusually long pit stops—some lasting up to around one minute or slightly more—in 2015, 2019, and 2024. These are almost certainly due to race stoppages (e.g., red flags for weather or accidents) rather than normal tire changes. Such extreme values act as outliers and will be handled accordingly in the analysis to avoid skewing results.

    b. **Filtering Outliers:** When I remove or treat these extended pit-stop durations (around 50 seconds), I assume these represent race interruptions rather than genuine tire changes.

    c. **Completeness of Data:** I assume the Ergast database has no missing or erroneous rows for my chosen years. Missing pit-stop records or incomplete race results could bias my findings.
    
    


### Remember

Please mention any additional files that you want the markers to review, eg. read me, meta data etc.

<!-- Task 2 Tab: Writing your blogpost -->

## The Pitstop Puzzle: Speedy Tires vs. Final Position

Formula 1 is all about razor-thin margins, and while the drivers get most of the spotlight, I’ve always been curious about how much those lightning-fast pit stops actually influence race outcomes. As a longtime fan, I wanted to go beyond the hype and use real data to see if quick pit crews really move the needle on finishing positions—especially across different eras as the sport has evolved. This analysis is about turning instinct into insight and shining a light on an often overlooked but crucial part of the race.

I’m testing whether faster pit stops really boost race results by checking two things for each selected year (2011, 2015, 2019, 2024):

  1. Do shorter pit-stop times (in seconds) correlate with better finishing positions?

  2. Do they translate into more places gained from a driver’s starting grid spot?
  
Below, I show the 2011 analysis as an example (converting milliseconds -> seconds, computing `positionGain = grid − positionOrder`, then running Pearson’s `cor.test()` on `seconds` vs. `finishing position` and `seconds` vs. `position gain`). I repeat the exact same steps for 2015, 2019, and 2024.

```{r,results='hide'}
#using pearson correlation test for the pitstop time, net gain in position and finishing position
combined_2011 <- combined_2011 %>%
  mutate(
    seconds = milliseconds / 1000,
    positionGain = grid - positionOrder)
#pitstop time vs finishing position
cor.test(combined_2011$seconds, combined_2011$positionOrder, method = "pearson")

#pitstop time vs places gained
cor.test(combined_2011$seconds, combined_2011$positionGain, method = "pearson")
```

```{r, echo=FALSE, results='hide'}
combined_2015 <- combined_2015 %>%
  mutate(seconds = milliseconds / 1000,
         positionGain = grid - positionOrder)
cor.test(combined_2015$seconds, combined_2015$positionOrder, method = "pearson")
cor.test(combined_2015$seconds, combined_2015$positionGain, method = "pearson")

combined_2019 <- combined_2019 %>%
  mutate(seconds = milliseconds / 1000,
         positionGain = grid - positionOrder)
cor.test(combined_2019$seconds, combined_2019$positionOrder, method = "pearson")
cor.test(combined_2019$seconds, combined_2019$positionGain, method = "pearson")

combined_2024 <- combined_2024 %>%
  mutate(seconds = milliseconds / 1000,
         positionGain = grid - positionOrder)
cor.test(combined_2024$seconds, combined_2024$positionOrder, method = "pearson")
cor.test(combined_2024$seconds, combined_2024$positionGain, method = "pearson")
```

```{r, message=FALSE}
library(Hmisc)

combined_2011 <- combined_2011 %>%
  mutate(
    seconds = milliseconds / 1000,
    positionGain = grid - positionOrder
  )

data_2011 <- combined_2011 %>%
  select(seconds, positionOrder, positionGain)

rcorr(as.matrix(data_2011), type = "pearson")
```


5.  Conclusions\
6.  References

<!-- Task 3 Tab: Behind the Scenes -  -->

## Behind the Scenes

### What's in this section

### Were there any challenges that you faced in conducting this analysis.

Here is where you should tell us about your reflection on your analysis (Task 3).

Again, these are the details about **your** perspective and the gritty details behind the scenes of your analysis.
::::::
