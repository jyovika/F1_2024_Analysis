---
title: "trying data"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(lubridate)
```

## DID NOT WORK
```{r}
library(httr)
library(jsonlite)

getPitStops <- function(season = "2024", round = "5") {
  url <- sprintf("https://ergast.com/api/f1/%s/%s/pitstops.json?limit=1000",
                 season, round)
  res <- GET(url)
  stop_for_status(res)
  
  # 1) Parse raw JSON into an R list
  data_list <- fromJSON(content(res, as = "text", encoding = "UTF-8"),
                        simplifyVector = FALSE)
  
  # 2) Drill into the RaceTable â†’ Races element
  races <- data_list$MRData$RaceTable$Races
  
  # 3) If there's no race (or no pit stops), return an empty df
  if (length(races) == 0 || is.null(races[[1]]$PitStops)) {
    message("No pit-stop data for ", season, " round ", round)
    return(data.frame())
  }
  
  # 4) Extract the PitStops list and coerce to data.frame
  pitstops_list <- races[[1]]$PitStops
  pitstops_df   <- do.call(rbind, lapply(pitstops_list, as.data.frame))
  
  # 5) Clean up rownames & return
  rownames(pitstops_df) <- NULL
  pitstops_df
}

# Try it out:
ps_2024_r5 <- getPitStops("2024", "5")
head(ps_2024_r5)

```
## DID NOT WORK
```{r}
#pitstops_df <- read.csv(here::here("data/pit_stops.csv"))
#unique(pitstops_df$duration)

#pitstops_df$duration_secs <- period_to_seconds(ms(pitstops_df$duration))


#pitstops_df$parsed_duration <- ms(pitstops_df$duration)


#numeric_secs <- period_to_seconds(pitstops_df$parsed_duration)

#print(pitstops_df$parsed_duration)

#print(pitstops_df$parsed_duration)


#mean(pitstops_df$parsed_duration)
```

## tryinng to see distribution of pitstop times
```{r}
library(TidyDensity)

pitstops_df <- read.csv(here::here("data/pit_stops.csv"))
pitstops_df$seconds <- pitstops_df$milliseconds/1000

mean_seconds <- mean(pitstops_df$seconds)
median_seconds <- median(pitstops_df$seconds)
pitstops_df$seconds |>
  tidy_empirical() |>
  tidy_autoplot()


```

## looking at results csv

```{r}
results_df <- read.csv(here::here("data/results.csv"))
```

## looking at race csv

```{r}
race_df <- read.csv(here::here("data/races.csv"))
```

## looking at driver csv
```{r}
driver_df <- read.csv(here::here("data/drivers.csv"))
```

## looking at constructor csv

```{r}
constructor_df <- read.csv(here::here("data/constructors.csv"))
```

## looking at status csv

```{r}
status_df <- read.csv(here::here("data/status.csv"))
```

